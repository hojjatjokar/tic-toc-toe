{"version":3,"sources":["components/Square.tsx","components/Board.tsx","utils/calculateWinner.ts","components/Game.tsx","index.tsx"],"names":["Square","value","onClick","className","Board","squares","renderSquare","i","calculateWinner","lines","length","a","b","c","Game","status","React","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setxIsNext","current","winner","moves","map","step","move","desc","jumpTo","historySlice","slice","concat","handleClick","ReactDOM","render","document","getElementById"],"mappings":"+LAiBeA,MAVf,YAA4C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,QACvB,OACE,wBACEC,UAAqB,MAAVF,EAAgB,SAAW,eACtCC,QAASA,EAFX,SAGGD,KCqBQG,MAzBf,YAA6C,IAA5BC,EAA2B,EAA3BA,QAASH,EAAkB,EAAlBA,QAClBI,EAAe,SAACC,GACpB,OAAO,cAAC,EAAD,CAAQN,MAAOI,EAAQE,GAAIL,QAAS,kBAAMA,EAAQK,OAE3D,OACE,gCACE,sBAAKJ,UAAU,iBAAf,UACGG,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKH,UAAU,YAAf,UACGG,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKH,UAAU,kBAAf,UACGG,EAAa,GACbA,EAAa,GACbA,EAAa,UCPPE,MApBf,SAAyBH,GAWvB,IAVA,IAAMI,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAF,EAAI,EAAGA,EAAIE,EAAMC,OAAQH,IAAK,CAAC,IAAD,cACnBE,EAAMF,GADa,GAC9BI,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIR,EAAQM,IAAMN,EAAQM,KAAON,EAAQO,IAAMP,EAAQM,KAAON,EAAQQ,GACpE,OAAOR,EAAQM,GAGnB,OAAO,MCsDMG,MA/Df,WAAiB,IAgBXC,EAhBU,EACgBC,IAAMC,SAA0B,CAC5D,CAAEZ,QAASa,MAAM,GAAGC,KAAK,SAFb,mBACPC,EADO,KACEC,EADF,OAIsBL,IAAMC,SAAiB,GAJ7C,mBAIPK,EAJO,KAIKC,EAJL,OAKgBP,IAAMC,UAAS,GAL/B,mBAKPO,EALO,KAKEC,EALF,KAMRC,EAAUN,EAAQE,GAClBK,EAASnB,EAAgBkB,EAAQrB,SACjCuB,EAAQR,EAAQS,KAAI,SAACC,EAAMC,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACE,6BACE,wBAAQ7B,QAAS,kBAAM+B,EAAOF,IAA9B,SAAsCC,KAD/BD,MAQXhB,EADEY,EACO,WAAaA,EAEb,iBAAmBH,EAAU,IAAM,KAG9C,IAAMS,EAAS,SAACH,GACdP,EAAcO,GACdL,EAAWK,EAAO,IAAM,IAmB1B,OACE,sBAAK3B,UAAU,OAAf,UACE,wBAAQA,UAAU,SAAlB,SAA4BY,IAC5B,iCACE,qBAAKZ,UAAU,aAAf,SACE,cAAC,EAAD,CACEE,QAASqB,EAAQrB,QACjBH,QAAS,SAACK,GAAD,OAvBC,SAACA,GACnB,IAAM2B,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAE7CjB,EADU6B,EAAaA,EAAaxB,OAAS,GAC3BL,QAAQ8B,QAE5B3B,EAAgBH,IAAYA,EAAQE,KAIxCF,EAAQE,GAAKiB,EAAU,IAAM,IAE7BH,EAAWa,EAAaE,OAAO,CAAC,CAAE/B,QAASA,MAC3CkB,EAAcW,EAAaxB,QAC3Be,GAAYD,IAUoBa,CAAY9B,QAGxC,qBAAKJ,UAAU,YAAf,SACE,6BAAKyB,a,MC3DfU,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.4f4f2c00.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  value: string | null;\n  onClick: () => void;\n};\n\nfunction Square({ value, onClick }: Props) {\n  return (\n    <button\n      className={value === 'X' ? 'square' : 'square white'}\n      onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square';\n\ntype Props = {\n  squares: Array<null | string>;\n  onClick: Function;\n};\n\nfunction Board({ squares, onClick }: Props) {\n  const renderSquare = (i: number) => {\n    return <Square value={squares[i]} onClick={() => onClick(i)} />;\n  };\n  return (\n    <div>\n      <div className=\"board-row ceil\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row floor\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","function calculateWinner(squares: Array<null | string>) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default calculateWinner;\n","import React from 'react';\nimport Board from './Board';\nimport calculateWinner from '../utils/calculateWinner';\n\ninterface Ihistory {\n  squares: Array<null | string>;\n}\n\nfunction Game() {\n  const [history, setHistory] = React.useState<Array<Ihistory>>([\n    { squares: Array(9).fill(null) },\n  ]);\n  const [stepNumber, setStepNumber] = React.useState<number>(0);\n  const [xIsNext, setxIsNext] = React.useState(true);\n  const current = history[stepNumber];\n  const winner = calculateWinner(current.squares);\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n  let status;\n\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  const jumpTo = (step: number) => {\n    setStepNumber(step);\n    setxIsNext(step % 2 === 0);\n  };\n\n  const handleClick = (i: number) => {\n    const historySlice = history.slice(0, stepNumber + 1);\n    const current = historySlice[historySlice.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = xIsNext ? 'X' : 'O';\n\n    setHistory(historySlice.concat([{ squares: squares }]));\n    setStepNumber(historySlice.length);\n    setxIsNext(!xIsNext);\n  };\n\n  return (\n    <div className=\"game\">\n      <header className=\"status\">{status}</header>\n      <main>\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i: number) => handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <ol>{moves}</ol>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './components/Game';\nimport './index.css';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}